% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learn_from_observations.R
\name{learn_from_observations}
\alias{learn_from_observations}
\title{Learn successor values from observations}
\usage{
learn_from_observations(
  successor_matrix,
  observations,
  alpha,
  gamma,
  bidirectional = FALSE
)
}
\arguments{
\item{successor_matrix}{A square matrix created by `initialize_successor`.}

\item{observations}{A tibble with observations `from` a node `to` another.}

\item{alpha}{Scalar corresponding to the learning rate bound in [0, 1].}

\item{gamma}{Scalar corresponding to the lookaround horizon bound in [0, 1).}

\item{bidirectional}{Logical. Defaults to `FALSE`, which means that only
the `from-to` relationship gets updated. If set to `TRUE`, this function
will also update the `to-from` relationship.}
}
\value{
A matrix with updated successor values, given the observations.
}
\description{
After observing relations between nodes (i.e., transitioning between
states), update the successor values. This function learns from many
observations. To update the successor values from a single observation,
use `update_successor` instead.
}
\examples{
`\%>\%` <- magrittr::`\%>\%`
karate_graph <- successr::karate \%>\%
    tidygraph::as_tbl_graph(directed = F)
karate_walk <- karate_graph \%>\%
    generate_random_walk(1000)
karate_graph \%>\%
    initialize_successor() \%>\%
    learn_from_observations(karate_walk, 0.1, 0.4, TRUE) \%>\%
    matrix_to_adjlist()

}

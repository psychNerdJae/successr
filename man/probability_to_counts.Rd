% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/probability_to_counts.R
\name{probability_to_counts}
\alias{probability_to_counts}
\title{Convert probabilities into successor counts}
\usage{
probability_to_counts(
  successor_values,
  value_col_name = NULL,
  gamma_value = NULL
)
}
\arguments{
\item{successor_values}{The learned successor values. If your input is a
dataframe, there must be a column named "gamma".}

\item{value_col_name}{If your input is a dataframe, specify the column name.}

\item{gamma_value}{If your input is a matrix, specify the gamma.}
}
\value{
Returns the input.
}
\description{
De-Normalizes the successor matrix. Technically, the successor values are
(this is a mouthful) discounted expected counts of future state occupancies,
given a starting state. More simply: they're counts of how often you'd
expect to end up in a particular state, given that you started out in a
particular state.

Much of the time, we're not particularly interested in the exact counts,
but rather probabilities. Interestingly enough, there's a tight coupling
between \eqn{\gamma}, the number of lookahead steps, and the normalization
constant.

The value of \eqn{\gamma} dictates how many "time steps" are considered
when encoding successor states into the current state. The exact equation is
\eqn{lookahead = 1 / (1 - \gamma)}. In the case of \eqn{\gamma = 0.8},
the successor algorithm looks five steps into the future.

We can convert counts into probabilities by scalar-multiplying the matrix
\eqn{M} by the normalization factor \eqn{1 - \gamma}. We can inversely
convert probabilities into counts: \eqn{M * (1 / 1 - \gamma)}.
Yes, it's that easy, but beware that your probabilities might not sum to one
(!!), due to computational limits on numeric precision or a non-converged
(non-asymptotic) matrix.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert.R
\name{convert_graph_to_matrix}
\alias{convert_graph_to_matrix}
\alias{convert_graph_to_adjlist}
\alias{convert_adjlist_to_matrix}
\alias{convert_matrix_to_adjlist}
\title{Convert between network formats}
\usage{
convert_graph_to_matrix(input)

convert_graph_to_adjlist(input, relation_value_col)

convert_adjlist_to_matrix(input, relation_value_col)

convert_matrix_to_adjlist(input, relation_value_col)
}
\arguments{
\item{input}{Depending on the function, a permissible input could be a
matrix, dataframe/tibble, or `tidygraph::tbl_graph`.}

\item{relation_value_col}{The name of the column that encodes (or will
encode) the strength of relationship between two nodes. For example, in an
adjacency representation, this might be zeroes (not friends) and ones
(yes friends).}
}
\description{
Different network formats are useful for different operations of interest.
For example, successor algorithms rely on matrix operations, but it is often
useful to convert matrices into tidy dataframes for visualization (i.e.,
using `ggplot2`). Similarly, when simulating the dynamics of a given network,
it can be useful to maintain a graph (i.e., using `tidygraph`). This family
of functions enables straightforward (but non-exhaustive) conversion between
formats, with a focus on getting to two "target" formats.

The first format is a matrix, because all successor updates must occur in a
matrix. This motivates `convert_graph_to_matrix` and
`convert_adjlist_to_matrix`.

The second format is something I call an "adjlist", which is basically a
matrix in a tidy dataframe. The column `from` indexes rows, the column `to`
indexes columns, and the column `edge` encodes the connection strength. This
blends together the basic format of edgelists, but maintains an explicit
record of all possible relations (i.e., such that there are as many dataframe
observations as there are matrix cells). This tidy format is useful for
plotting, and motivates `convert_graph_to_adjlist` and
`convert_matrix_to_adjlist`.
}
\examples{
`\%>\%` <- magrittr::`\%>\%`
# Create a graph, then convert into matrix
successr::karate \%>\%
  tidygraph::tbl_graph(edges = ., directed = F) \%>\%
  successr::convert_graph_to_matrix()

}
